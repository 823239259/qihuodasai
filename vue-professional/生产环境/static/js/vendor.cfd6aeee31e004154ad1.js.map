{"version":3,"sources":["webpack:///static/js/vendor.cfd6aeee31e004154ad1.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/util.js","webpack:///./~/_vue-loader@12.2.1@vue-loader/lib/component-normalizer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/graphic.js","webpack:///./~/_echarts@3.6.2@echarts/lib/echarts.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/model.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/number.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/vector.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Path.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/env.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Model.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/format.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/clazz.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/BoundingRect.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Component.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisHelper.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/text.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/curve.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/matrix.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/layout.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/event.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Eventful.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/color.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/core-js/json/stringify.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_core.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_descriptors.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Scale.js","webpack:///./~/_zrender@3.5.2@zrender/lib/config.js","webpack:///./~/_zrender@3.5.2@zrender/lib/container/Group.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/PathProxy.js","webpack:///./~/_vue@2.3.4@vue/dist/vue.esm.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_fails.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_global.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_is-object.js","webpack:///./~/_echarts@3.6.2@echarts/lib/CoordinateSystem.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Series.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Interval.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/component.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/timsort.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Displayable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Gradient.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_defined.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_export.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_iobject.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-dp.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-integer.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-iobject.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/Symbol.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/AxisView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/gridSimple.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/Axis.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Grid.js","webpack:///./~/_echarts@3.6.2@echarts/lib/data/List.js","webpack:///./~/_echarts@3.6.2@echarts/lib/data/helper/completeDimensions.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/colorPalette.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/helper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/symbol.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/throttle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/view/Chart.js","webpack:///./~/_vuex@2.3.1@vuex/dist/vuex.esm.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Element.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Animator.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/util.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/LRU.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/guid.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/log.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Image.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Pattern.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Style.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/poly.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Transformable.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/assign.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/define-property.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/helpers/defineProperty.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/helpers/extends.js","webpack:///./~/_core-js@2.4.1@core-js/library/fn/json/stringify.js","webpack:///./~/_core-js@2.4.1@core-js/library/fn/object/assign.js","webpack:///./~/_core-js@2.4.1@core-js/library/fn/object/define-property.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_a-function.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_an-object.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_array-includes.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_cof.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_ctx.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_dom-create.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_enum-bug-keys.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_has.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_hide.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_ie8-dom-define.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-assign.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-gops.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-keys-internal.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-keys.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-pie.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_property-desc.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_shared-key.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_shared.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-index.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-length.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-object.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-primitive.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_uid.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/es6.object.assign.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/es6.object.define-property.js","webpack:///./~/_echarts@3.6.2@echarts/lib/ExtensionAPI.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/BarSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/BarView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/barItemStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/helper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/labelHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/LineSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/LineView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/poly.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisDefault.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisModelCreator.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/data/DataDiffer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/helper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/layout/barGrid.js","webpack:///./~/_echarts@3.6.2@echarts/lib/layout/points.js","webpack:///./~/_echarts@3.6.2@echarts/lib/loading/default.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Global.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/OptionManager.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/globalDefault.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/areaStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/boxLayout.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/itemStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/lineStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/textStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/_echarts@3.6.2@echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/processor/dataSample.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Log.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Ordinal.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Time.js","webpack:///./~/_echarts@3.6.2@echarts/lib/view/Component.js","webpack:///./~/_echarts@3.6.2@echarts/lib/visual/seriesColor.js","webpack:///./~/_echarts@3.6.2@echarts/lib/visual/symbol.js","webpack:///./~/_vue-router@2.5.3@vue-router/dist/vue-router.esm.js","webpack:///./~/_vue-style-loader@3.0.1@vue-style-loader/lib/listToStyles.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Handler.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Layer.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Painter.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Storage.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Animation.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Clip.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/easing.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/arc.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/cubic.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/line.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/path.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/quadratic.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/windingLine.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/GestureMgr.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/bbox.js","webpack:///./~/_zrender@3.5.2@zrender/lib/dom/HandlerProxy.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/CompoundPath.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/LinearGradient.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/RadialGradient.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Text.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/roundRect.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/mixin/RectText.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Arc.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Circle.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Line.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polygon.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polyline.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Rect.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Ring.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Sector.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Animatable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Draggable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/path.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/transformPath.js","webpack:///./~/_zrender@3.5.2@zrender/lib/zrender.js","webpack:///./~/_css-loader@0.28.4@css-loader/lib/css-base.js","webpack:///./~/_vue-style-loader@3.0.1@vue-style-loader/lib/addStylesClient.js"],"names":["webpackJsonp","module","exports","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","Array","get","prefixedKey","removeKey","noop","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","default","options","render","staticRenderFns","_scopeId","hook","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","functional","existing","beforeCreate","h","__webpack_require__","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","style","fill","hoverStyle","__hoverStl","normalStyle","name","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","setStyle","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","dataIndex","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","zrUtil","pathTool","Path","matrix","vector","Transformable","BoundingRect","round","Math","mathMax","max","mathMin","min","graphic","Group","Image","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","opts","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","aspect","width","height","cx","x","cy","y","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","opt","hoverSilentOnTouch","on","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","getModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","ecModel","gTextStyleModel","fontStyle","fontWeight","fontSize","fontFamily","join","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","_onframe","doConvertPixel","methodName","finder","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","chartView","storage","elCount","env","node","ignore","frameDrawNum","needProgressive","progressive","floor","blendMode","canvasSupported","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","log","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","left","Infinity","top","right","bottom","canvasList","canvas","getBoundingClientRect","targetCanvas","img","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","browser","weChat","MOUSE_EVENT_NAMES","eveName","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","val","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","parseDate","NaN","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","marker","getTooltipMarker","$vars","getFormattedLabel","dimIndex","labelProp","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","match","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","_trim","str","quantityExponent","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","getTimezoneOffset","exec","timezoneOffset","timeOffset","quantity","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","extraCssText","s2d","formatTime","isUTC","date","utc","M","capitalFirst","substr","truncateText","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","getDependencies","deps","arrayPush","componentUtil","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","getTextWidth","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","containerWidth","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","__esModule","core","__e","defineProperty","collectAxesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","excludes","includes","propName","setting","_setting","_extent","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","__webpack_exports__","isUndef","undefined","isDef","isTrue","isFalse","isPlainObject","_toString","isRegExp","JSON","toNumber","expectsLowerCase","fn","cache","boundFn","_length","toArray","to","_from","toObject","res","looseEqual","isObjectA","isObjectB","looseIndexOf","once","called","isReserved","def","enumerable","writable","configurable","bailRE","segments","handleError","err","vm","info","errorHandler","inBrowser","error","isNative","pushTarget","_target","Dep","targetStack","popTarget","protoAugment","src","__proto__","copyAugment","keys","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","dep","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","dependArray","newVal","notify","del","mergeData","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeProps","camelize","normalizeDirectives","dirs","directives","mergeOptions","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","isType","Boolean","hyphenate","getPropDefaultValue","prevShouldConvert","$options","_props","getType","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","elm","componentOptions","ns","isStatic","isComment","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","cur","old","capture","passive","mergeVNodeHook","hookKey","wrappedHook","oldHook","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","last","_isVList","ensureCtor","comp","resolveAsyncComponent","factory","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","resolve","reject","reason","then","delay","setTimeout","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","functionalContext","slot","every","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","hydrating","$el","createEmptyVNode","callHook","updateComponent","_update","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","$emit","resetSchedulerState","queue","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdateHooks","devtools","emit","queueActivatedComponent","queueWatcher","nextTick","seenObjects","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","methods","initMethods","initData","_data","computed","initComputed","watch","initWatch","propsOptions","isRoot","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","evaluate","createWatcher","$watch","initProvide","provide","_provided","initInjections","resolveInject","inject","hasSymbol","Reflect","ownKeys","provideKey","createFunctionalComponent","mergeProps","_context","injections","functionalOptions","createComponent","_base","cid","resolveConstructorOptions","transformModel","nativeOn","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","two","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","mustUseProp","domProps","renderStatic","isInFor","tree","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","initRender","renderContext","_c","$createElement","initInternalComponent","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","Vue$3","_init","initUse","Vue","use","plugin","installed","unshift","install","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","current","cachedNode","pruneCacheEntry","componentInstance","$destroy","genClassForVnode","parentNode","childNode","mergeClassData","genClassFromData","staticClass","class","dynamicClass","stringifyClass","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","selected","querySelector","createElement$1","tagName","multiple","createElementNS","namespace","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","setTextContent","textContent","registerRef","isRemoval","ref","refs","refInFor","sameVnode","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","modules","_","addProp","addAttr","addDirective","arg","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","index$1","expressionPos","expressionEndPos","lastIndexOf","eof","chr","isStringStart","parseString","parseBracket","substring","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","isChrome","add$1","oldHandler","target$1","ev","remove$2","supportsPassive","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","removeClass","tar","resolveTransition","def$$1","css","autoCssTransition","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","isMultiple","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","moved","WebkitTransform","transitionDuration","decode","html","decoder","innerHTML","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseEndTag","lowerCasedTagName","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","stackedTag","reStackedTag","reCache","RegExp","endTagLength","rest","endTag","chars","textEnd","comment","commentEnd","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","rest$1","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","lastIndex","template","endPre","element","pre","inVPre","platformIsPreTag","inPre","warn$2","platformGetTagNamespace","platformMustUseProp","isPreTag","preTransforms","transforms","postTransforms","root","currentParent","preserveWhitespace","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","processRef","processSlot","processComponent","i$1","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","isTextTag","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","staticInFor","staticRoot","walkThroughConditionsBlocks","conditionBlocks","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","bind$1","wrapData","generate","ast","prevStaticRenderFns","currentStaticRenderFns","prevOnceCount","onceCount","currentOptions","warn$3","transforms$1","dataGenFns","platformDirectives$1","isPlatformReservedTag$1","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData","genChildren","genIfConditions","conditions","genTernaryExp","genDirectives","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","baseDirectives","inlineRenderFns","genScopedSlot","genForScopedSlot","scope","checkSkip","el$1","getNormalizationType","genNode","needsNormalization","some","maybeComponent","genText","transformSpecialNewlines","bind$$1","componentName","baseCompile","makeFunction","errors","transformNode","classBinding","genData$1","transformNode$1","styleBinding","genData$2","getOuterHTML","outerHTML","cloneNode","camelizeRE","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","productionTip","performance","ignoredElements","isReservedAttr","_lifecycleHooks","freeze","hasProto","UA","isEdge","isAndroid","isIOS","_isServer","_Set","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Symbol","nextTickHandler","pending","copies","callbacks","timerFunc","Promise","logError","catch","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","subs","addSub","removeSub","addDep","arrayMethods","original","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","walk","items","instanceData","defaultData","raw","prototypeAccessors","defineProperties","uid$2","expOrFn","deep","user","active","newDeps","depIds","newDepIds","cleanupDeps","this$1","teardown","$mount","keepAlive","mountedNode","prepatch","insert","destroy","uid$1","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","cbs","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","_o","_n","_s","_l","_q","_i","_m","_f","_k","_b","_v","_e","_u","patternTypes","KeepAlive","include","exclude","created","destroyed","builtInComponents","configDef","defineReactive","delete","testEl","acceptValue","svg","math","isHTMLTag","nodeOps","hooks","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","prefixes","upper","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","postpatch","invokeInsertHook","initial","hydrate","hasChildNodes","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","vmodel","model$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","platformComponents","content","encoded","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","regexEscapeRE","open","esc","tab","space","up","down","genGuard","prevent","ctrl","alt","meta","middle","cloak","klass$1","style$1","modules$1","directives$1","baseOptions","ref$1","compile","finalOptions","tips","tip$$1","compiled","compileToFunctions","functionCompileCache","fnGenErrors","idToTemplate","mount","documentElement","__g","it","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","encodeDef","dimsDef","completeDimensions","categoryIndex","nameList","createNameList","categories","dimValueGetter","hasItemOption","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","angle","geo","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","cloneShallow","getLinkedData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","tooltip","valStr","vertially","tooltipName","tooltipDims","colorEl","animationEnabled","getColorFromPalette","getAxisTooltipData","getTooltipPosition","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","eval","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","TypeError","hide","$export","own","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","P","IS_BIND","IS_WRAP","W","expProto","virtual","U","cof","propertyIsEnumerable","anObject","IE8_DOM_DEFINE","toPrimitive","dP","O","Attributes","IObject","defined","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","symbolUtil","labelHelper","symbolProto","_createSymbol","symbolType","hostModel","symbolPath","createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","getItemStyle","elStyle","setColor","opacity","valueDim","findLabelValueDim","setTextToStyle","onEmphasis","ratio","onNormal","fadeOut","makeAxisEventDataBase","endTextLayout","textRotate","textVerticalAlign","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","labelLayout","firstRect","nextRect","mRotationBack","AxisBuilder","nameDirection","tickDirection","labelDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","getLineStyle","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelMargin","labelRotation","labelRotate","innerTextLayout","categoryData","triggerEvent","tickVal","itemTextStyleModel","textColor","dataToCoord","labelStr","textEl","targetType","decomposeTransform","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","axisRotation","textRotation","rawTick","updateAxisPointer","axisView","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","gridModel","getZero","theAxis","grid","toGlobalCoord","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posMap","dirMap","labelInside","getLabelInterval","getItemGraphicEl","dataToPoint","getValues","initGlobalListeners","useHandler","dis","makeDispatchAction","records","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","globalListener","unregister","confineInContainer","viewWidth","viewHeight","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","xAxis","yAxis","fixExtentWithBands","nTick","size","normalizedExtent","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","isAxisUsedInTheGrid","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","otherAxis","getOtherAxis","grids","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","isDataArray","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","itemName","DataCtor","stackedValue","dimData","dimExtent","getSum","rawIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dataDimNameMap","dimCount","value0","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","colorIdx","colorNameMap","colorPalette","fixExtent","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","lib","ORIGIN_METHOD","RATE","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","devtoolPlugin","store","devtoolHook","_devtoolHook","targetState","replaceState","subscribe","mutation","forEachValue","isPromise","targetModule","newModule","getChild","resetStore","hot","_actions","_mutations","_wrappedGetters","_modulesNamespaceMap","installModule","_modules","resetStoreVM","oldVm","_vm","getters","wrappedGetters","$$state","strict","enableStrictMode","_withCommit","rootState","getNamespace","namespaced","parentState","getNestedState","moduleName","local","makeLocalContext","forEachMutation","registerMutation","forEachAction","forEachGetter","registerGetter","forEachChild","noNamespace","dispatch","_type","_payload","_options","unifyObjectStyle","commit","makeLocalGetters","gettersProxy","splitPos","localType","rootGetters","rawGetter","_committing","_Vue","applyMixin","normalizeMap","normalizeNamespace","getModuleByNamespace","mapMutations","vuexInit","$store","usesInit","Module","rawModule","runtime","_rawModule","rawState","prototypeAccessors$1","addChild","mutations","ModuleCollection","rawRootModule","rawChildModule","Store","plugins","_subscribers","_watcherVM","entry","registerModule","unregisterModule","hotUpdate","newOptions","committing","mapState","states","vuex","mapGetters","mapActions","index_esm","guid","Animatable","clipPath","afterUpdate","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","LinkedList","head","tail","linkedListProto","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","leastUsedEntry","idStart","ZImage","globalImageCache","_image","cachedImgObj","onload","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","textStroke","textPositionRect","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","smooth","controlPoints","smoothConstraint","cp1","cp2","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","_defineProperty","_defineProperty2","_assign","_assign2","$JSON","assign","$Object","desc","toIObject","toLength","toIndex","IS_INCLUDES","$this","fromIndex","aFunction","that","is","createDesc","object","getKeys","gOPS","pIE","$assign","aLen","getSymbols","isEnum","getOwnPropertySymbols","arrayIndexOf","IE_PROTO","$keys","enumBugKeys","bitmap","shared","toInteger","valueOf","px","chartInstance","echartsAPIList","barLayoutGrid","eachSeriesByType","brushSelector","removeRect","animationModel","removeSector","isPolar","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","coordinateSystemType","isHorizontalOrRadial","elementCreator","newIndex","oldIndex","execute","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","getMarkerPosition","pt","legendHoverLink","barMinHeight","barMinAngle","getBorderLineDash","labelText","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","newIdx","symbolEl","oldIdx","enableAnimation","labelDims","clipOverflow","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","sign","getStackedOnPoints","valueAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","categoryAxis","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","axisTrigger","link","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","padding","borderColor","borderWidth","handle","icon","AxisPonterView","disopse","BaseAxisPointer","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","createIcon","handleModel","iconStr","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","getAxisDimIndex","viewHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","tooltipModel","zrColor","borderName","camelCase","TooltipContent","_x","_y","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","domStyle","setContent","setEnterable","enterable","getSize","viewportRoot","getViewportRoot","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","confineTooltipPosition","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","timeAxis","logAxis","logBase","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","coordExtent","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","output","axisX","axisY","dataToPoints","containLabel","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","axisModelCommonMixin","createList","createScale","mixinAxisModelCommonMethods","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","calBarWidthAndOffset","barSeries","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","getSeriesByType","isSeriesFiltered","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","lastCoord","lastCoordOrigin","coordDims","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeries","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","animationDuration","progressiveThreshold","useUTC","lineType","getLineDash","dotSize","dashSize","graphicUtil","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","samplers","average","nearest","indexSampler","sampler","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","Component","componentProto","encodeColor","colorAccessPath","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","resolveProps","route","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","parts","stringifyQuery","val2","createRoute","location","redirectedFrom","router","stringifyQuery$$1","fullPath","getFullPath","formatMatch","_stringifyQuery","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","isIncludedRoute","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","findAnchor","_router","_route","registerInstance","callVal","registerRouteInstance","history","View","Link","beforeRouteEnter","beforeRouteLeave","resolvePath","relative","append","firstChar","segment","hashIndex","queryIndex","cleanPath","defaultDelimiter","delimiter","PATH_REGEXP","escaped","prefix","modifier","asterisk","partial","optional","escapeGroup","escapeString","tokensToFunction","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","encodeURIComponent","token","attachKeys","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","endsWithDelimiter","fillParams","routeMsg","regexpCompileCache","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","normalizedPath","normalizePath","regex","compileRouteRegex","redirect","childMatchAs","aliasRoute","normalizeLocation","_normalized","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","paramNames","_createRoute","record$1","matchRoute","originalRedirect","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","decodeURIComponent","setupScroll","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","selector","getElementPosition","isValidPosition","normalizePosition","scrollTo","getStateKey","positionStore","pageXOffset","pageYOffset","docEl","docRect","elRect","isNumber","genKey","Time","now","_key","pushState","runQueue","normalizeBase","baseEl","resolveQueue","activated","deactivated","extractGuards","guards","flatMapComponents","instance","guard","extractGuard","flatten","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","resolveAsyncComponents","hasAsync","resolvedDef","isError","getLocation","pathname","search","checkFallback","ensureSlash","getHash","replaceHash","href","pushHash","registerHook","createHref","routerView","$route","_routerViewCache","depth","inactive","routerViewDepth","encodeReserveRE","encodeReserveReplacer","commaRE","toTypes","eventTypes","required","exact","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","click","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","supportsPushState","History","ready","readyCbs","readyErrorCbs","errorCbs","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","iterator","postEnterCbs","resolveHooks","afterHooks","HTML5History","History$$1","expectScroll","go","fromRoute","getCurrentLocation","HashHistory","setupListeners","AbstractHistory","targetIndex","VueRouter","apps","matcher","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","parentId","newStyles","sourceMap","part","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","toElement","relatedTarget","eventArgs","setCursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","prevDom","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_a","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","center","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","segs","w2","w3","maxValue","baseline","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","roundRectHelper","shadowTemp","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sources","sourceRoot","unescape","mediaQuery","alreadyImportedModules","addStylesToDom","stylesInDom","addStyle","createStyleElement","styleElement","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","childNodes","hasDocument","DEBUG","listToStyles","getElementsByTagName","_isProduction","mayRemove","textStore","replacement"],"mappings":"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4I,EAAA01G,cAAAj9F,EAAA,SAAAy/H,GAEA,MAAAC,GAEAn4I,EAAA01G,cAAAj9F,EAAA,aAAA0/H,UxK+8sCS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUt7I,EAAQoqD,EAAqBphD,GAE7C,YyK5ktCA,SAAAoP,GAAA7S,EAAAC,IAqFA,QAAA+1I,GAAAC,EAAAn3F,GACA,aAAAA,IACA,gBACA,MACA,cACA,MAAAA,EACA,gBACA,MAAAA,GAAAm3F,EACA,eACA,MAAAn3F,GAAAm3F,EAAA11H,WAAAwkC,IA2BA,QAAAmxF,GACA3iI,EACA4iI,EACAC,OAEA,KAAAD,SAEA,IACAE,GADAj3H,EAAAg3H,GAAAE,CAEA,KACAD,EAAAj3H,EAAA7L,GAAA,IACG,MAAA3N,GAEHywI,KAEA,OAAA36I,KAAAy6I,GAAA,CACA,GAAAtwH,GAAAswH,EAAAz6I,EACA26I,GAAA36I,GAAAkG,MAAA1F,QAAA2pB,KAAAhmB,QAAAgmB,EAEA,MAAAwwH,GAGA,QAAAC,GAAA/iI,GACA,GAAA0yC,KAIA,QAFA1yC,IAAA8vD,OAAA9hD,QAAA,kBAMAhO,EAAAc,MAAA,KAAApW,QAAA,SAAAwM,GACA,GAAA8rI,GAAA9rI,EAAA8W,QAAA,WAAAlN,MAAA,KACA3Y,EAAAu1E,GAAAslE,EAA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","file":"static/js/vendor.cfd6aeee31e004154ad1.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var pathTool = __webpack_require__(365);\n    var Path = __webpack_require__(7);\n    var colorTool = __webpack_require__(24);\n    var matrix = __webpack_require__(20);\n    var vector = __webpack_require__(6);\n    var Transformable = __webpack_require__(107);\n    var BoundingRect = __webpack_require__(12);\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(39);\n\n    graphic.Image = __webpack_require__(103);\n\n    graphic.Text = __webpack_require__(349);\n\n    graphic.Circle = __webpack_require__(356);\n\n    graphic.Sector = __webpack_require__(362);\n\n    graphic.Ring = __webpack_require__(361);\n\n    graphic.Polygon = __webpack_require__(358);\n\n    graphic.Polyline = __webpack_require__(359);\n\n    graphic.Rect = __webpack_require__(360);\n\n    graphic.Line = __webpack_require__(357);\n\n    graphic.BezierCurve = __webpack_require__(355);\n\n    graphic.Arc = __webpack_require__(354);\n\n    graphic.CompoundPath = __webpack_require__(346);\n\n    graphic.LinearGradient = __webpack_require__(347);\n\n    graphic.RadialGradient = __webpack_require__(348);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    graphic.getFont = function (opt, ecModel) {\n        var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(8);\n\n    var GlobalModel = __webpack_require__(213);\n    var ExtensionAPI = __webpack_require__(176);\n    var CoordinateSystemManager = __webpack_require__(45);\n    var OptionManager = __webpack_require__(214);\n\n    var ComponentModel = __webpack_require__(14);\n    var SeriesModel = __webpack_require__(47);\n\n    var ComponentView = __webpack_require__(227);\n    var ChartView = __webpack_require__(81);\n    var graphic = __webpack_require__(2);\n    var modelUtil = __webpack_require__(4);\n    var throttle = __webpack_require__(80);\n\n    var zrender = __webpack_require__(367);\n    var zrUtil = __webpack_require__(0);\n    var colorTool = __webpack_require__(24);\n    var Eventful = __webpack_require__(23);\n    var timsort = __webpack_require__(53);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.6.2',\n        dependencies: {\n            zrender: '3.5.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(228));\n    echarts.registerPreprocessor(__webpack_require__(221));\n    echarts.registerLoading('default', __webpack_require__(212));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(75);\n    echarts.Model = __webpack_require__(9);\n\n    echarts.Axis = __webpack_require__(71);\n\n    echarts.graphic = __webpack_require__(2);\n    echarts.number = __webpack_require__(5);\n    echarts.format = __webpack_require__(10);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(20);\n    echarts.vector = __webpack_require__(6);\n    echarts.color = __webpack_require__(24);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(209);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(52)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(10);\n    var nubmerUtil = __webpack_require__(5);\n    var Model = __webpack_require__(9);\n    var zrUtil = __webpack_require__(0);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(54);\n    var zrUtil = __webpack_require__(0);\n    var PathProxy = __webpack_require__(40);\n    var pathContain = __webpack_require__(340);\n\n    var Pattern = __webpack_require__(104);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(11);\n    var env = __webpack_require__(8);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(219));\n    mixin(Model, __webpack_require__(216));\n    mixin(Model, __webpack_require__(220));\n    mixin(Model, __webpack_require__(218));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(5);\n    var textContain = __webpack_require__(18);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(6);\n    var matrix = __webpack_require__(20);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 13 */,\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(9);\n    var zrUtil = __webpack_require__(0);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(49);\n    var clazzUtil = __webpack_require__(11);\n    var layout = __webpack_require__(21);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(217));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(225);\n    var IntervalScale = __webpack_require__(48);\n    __webpack_require__(226);\n    __webpack_require__(224);\n    var Scale = __webpack_require__(30);\n\n    var numberUtil = __webpack_require__(5);\n    var zrUtil = __webpack_require__(0);\n    var textContain = __webpack_require__(18);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: scale.type === 'interval' ? model.get('minInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 16 */,\n/* 17 */,\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(12);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(6);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(12);\n    var numberUtil = __webpack_require__(5);\n    var formatUtil = __webpack_require__(10);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(23);\n    var env = __webpack_require__(8);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(100);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(148), __esModule: true };\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(42)(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Model = __webpack_require__(9);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(0);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(11);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var Element = __webpack_require__(96);\n    var BoundingRect = __webpack_require__(12);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(19);\n    var vec2 = __webpack_require__(6);\n    var bbox = __webpack_require__(344);\n    var BoundingRect = __webpack_require__(12);\n    var dpr = __webpack_require__(38).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.3.4\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    } )); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // remove reference to DOM nodes (prevents leak)\n    vm.$options._parentElm = vm.$options._refElm = null;\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (false) {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (false) {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdateHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdateHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = {\n  key: 1,\n  ref: 1,\n  slot: 1\n};\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedProp[key] || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var result = Object.create(null);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (isUndef(Ctor.cid)) {\n    Ctor = resolveAsyncComponent(Ctor, baseCtor, context);\n    if (Ctor === undefined) {\n      // return nothing if this is indeed an async component\n      // wait for the callback to trigger parent update.\n      return\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return this\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.3.4';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (isUndef(value)) {\n    return ''\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  var res = '';\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (isDef(value[i])) {\n        if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.tag === b.tag &&\n    a.isComment === b.isComment &&\n    isDef(a.data) === isDef(b.data) &&\n    sameInputType(a, b)\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        if (ref.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((isDef(modifiers) && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (false\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    false\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, warn$3)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, warn$3)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (false) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}}\"\n}\n\nfunction genForScopedSlot (key, el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el)) +\n    '})'\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (false) {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(52)))\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(75);\n    var completeDimensions = __webpack_require__(76);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(4);\n    var CoordinateSystem = __webpack_require__(45);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(10);\n    var classUtil = __webpack_require__(11);\n    var modelUtil = __webpack_require__(4);\n    var ComponentModel = __webpack_require__(14);\n    var colorPaletteMixin = __webpack_require__(77);\n    var env = __webpack_require__(8);\n    var layout = __webpack_require__(21);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(5);\n    var formatUtil = __webpack_require__(10);\n    var Scale = __webpack_require__(30);\n    var helper = __webpack_require__(78);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         */\n        niceTicks: function (splitNumber, minInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval=false]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazz = __webpack_require__(11);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 50 */,\n/* 51 */,\n/* 52 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Style = __webpack_require__(105);\n\n    var Element = __webpack_require__(96);\n    var RectText = __webpack_require__(353);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 56 */,\n/* 57 */\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global    = __webpack_require__(43)\n  , core      = __webpack_require__(26)\n  , ctx       = __webpack_require__(155)\n  , hide      = __webpack_require__(159)\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(154);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject       = __webpack_require__(152)\n  , IE8_DOM_DEFINE = __webpack_require__(160)\n  , toPrimitive    = __webpack_require__(172)\n  , dP             = Object.defineProperty;\n\nexports.f = __webpack_require__(27) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(59)\n  , defined = __webpack_require__(57);\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var symbolUtil = __webpack_require__(79);\n    var graphic = __webpack_require__(2);\n    var numberUtil = __webpack_require__(5);\n    var labelHelper = __webpack_require__(184);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, elStyle, seriesModel, labelModel, color\n        );\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, hoverItemStyle, seriesModel, hoverLabelModel, color\n        );\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(10);\n    var graphic = __webpack_require__(2);\n    var Model = __webpack_require__(9);\n    var numberUtil = __webpack_require__(5);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(6);\n    var matrix = __webpack_require__(20);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(28);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(3).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(4);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(8);\n    var zrUtil = __webpack_require__(0);\n    var get = __webpack_require__(4).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(2);\n    var textContain = __webpack_require__(18);\n    var formatUtil = __webpack_require__(10);\n    var matrix = __webpack_require__(20);\n    var axisHelper = __webpack_require__(15);\n    var AxisBuilder = __webpack_require__(64);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(2);\n    var zrUtil = __webpack_require__(0);\n    var echarts = __webpack_require__(3);\n\n    __webpack_require__(74);\n\n    __webpack_require__(190);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(5);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(0);\n    var axisHelper = __webpack_require__(15);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getModel('textStyle').getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var axisHelper = __webpack_require__(15);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(14);\n    var zrUtil = __webpack_require__(0);\n    var axisModelCreator = __webpack_require__(203);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(72));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(21);\n    var axisHelper = __webpack_require__(15);\n\n    var zrUtil = __webpack_require__(0);\n    var Cartesian2D = __webpack_require__(206);\n    var Axis2D = __webpack_require__(204);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(207);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (\n                        axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis)\n                    )) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(45).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(9);\n    var DataDiffer = __webpack_require__(208);\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(4);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(52)))\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(4);\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(11);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(5);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(2);\n    var BoundingRect = __webpack_require__(12);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(39);\n    var componentUtil = __webpack_require__(49);\n    var clazzUtil = __webpack_require__(11);\n    var modelUtil = __webpack_require__(4);\n    var zrUtil = __webpack_require__(0);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Store */\n/* unused harmony export mapState */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return mapMutations; });\n/* unused harmony export mapGetters */\n/* unused harmony export mapActions */\n/**\n * vuex v2.3.0\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;\n    Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: {} };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  var this$1 = this;\n\n  // register root module (Vuex.Store options)\n  this.root = new Module(rawRootModule, false);\n\n  // register all nested modules\n  if (rawRootModule.modules) {\n    forEachValue(rawRootModule.modules, function (rawModule, key) {\n      this$1.register([key], rawModule, false);\n    });\n  }\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update(this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  var parent = this.get(path.slice(0, -1));\n  var newModule = new Module(rawModule, runtime);\n  parent.addChild(path[path.length - 1], newModule);\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (targetModule, newModule) {\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        console.warn(\n          \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n          'manual reload is needed'\n        );\n        return\n      }\n      update(targetModule.getChild(key), newModule.modules[key]);\n    }\n  }\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n  assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.concat(devtoolPlugin).forEach(function (plugin) { return plugin(this$1); });\n};\n\nvar prototypeAccessors = { state: {} };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  assert(false, \"Use store.replaceState() to explicit replace store state.\");\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown mutation type: \" + type));\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (options && options.silent) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var entry = this._actions[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown action type: \" + type));\n    return\n  }\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  var subs = this._subscribers;\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule) {\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path));\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var namespacedType = namespace + key;\n    registerAction(store, namespacedType, action, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler(local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler({\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    console.error((\"[vuex] duplicate getter key: \" + type));\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue) {\n    console.error(\n      '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n    );\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\n// auto install in dist mode\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapMutations', namespace)) {\n        return\n      }\n      return this.$store.commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (!(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapActions', namespace)) {\n        return\n      }\n      return this.$store.dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (!module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '2.3.0',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (index_esm);\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(101);\n    var Eventful = __webpack_require__(23);\n    var Transformable = __webpack_require__(107);\n    var Animatable = __webpack_require__(363);\n    var zrUtil = __webpack_require__(0);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(335);\n    var color = __webpack_require__(24);\n    var util = __webpack_require__(0);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(38);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(54);\n    var BoundingRect = __webpack_require__(12);\n    var zrUtil = __webpack_require__(0);\n\n    var LRU = __webpack_require__(100);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textPositionRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(352);\n    var smoothBezier = __webpack_require__(351);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(20);\n    var vector = __webpack_require__(6);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */,\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(149), __esModule: true };\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(150), __esModule: true };\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(145);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _assign = __webpack_require__(144);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core  = __webpack_require__(26)\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(174);\nmodule.exports = __webpack_require__(26).Object.assign;\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(175);\nvar $Object = __webpack_require__(26).Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(44);\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(62)\n  , toLength  = __webpack_require__(170)\n  , toIndex   = __webpack_require__(169);\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(151);\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(44)\n  , document = __webpack_require__(43).document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP         = __webpack_require__(60)\n  , createDesc = __webpack_require__(166);\nmodule.exports = __webpack_require__(27) ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(27) && !__webpack_require__(42)(function(){\n  return Object.defineProperty(__webpack_require__(156)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = __webpack_require__(164)\n  , gOPS     = __webpack_require__(162)\n  , pIE      = __webpack_require__(165)\n  , toObject = __webpack_require__(171)\n  , IObject  = __webpack_require__(59)\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(42)(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports) {\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has          = __webpack_require__(158)\n  , toIObject    = __webpack_require__(62)\n  , arrayIndexOf = __webpack_require__(153)(false)\n  , IE_PROTO     = __webpack_require__(167)('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = __webpack_require__(163)\n  , enumBugKeys = __webpack_require__(157);\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(168)('keys')\n  , uid    = __webpack_require__(173);\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(43)\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(61)\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(61)\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(57);\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(44);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports) {\n\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(58);\n\n$export($export.S + $export.F, 'Object', {assign: __webpack_require__(161)});\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(58);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(27), 'Object', {defineProperty: __webpack_require__(60).f});\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    __webpack_require__(74);\n\n    __webpack_require__(178);\n    __webpack_require__(179);\n\n    var barLayoutGrid = __webpack_require__(210);\n    var echarts = __webpack_require__(3);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(70);\n\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(180).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(2);\n    var helper = __webpack_require__(182);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(9).prototype, __webpack_require__(181));\n\n    var BarView = __webpack_require__(3).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(47);\n    var createListFromArray = __webpack_require__(46);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(29)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(2);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(2);\n    var Symbol = __webpack_require__(63);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = __webpack_require__(2);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(4);\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    helper.setTextToStyle = function (\n        data, dataIndex, valueDim, elStyle, seriesModel, labelModel, color\n    ) {\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                data.get(valueDim, dataIndex)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var echarts = __webpack_require__(3);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(186);\n    __webpack_require__(187);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(229), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(211), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(223), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(70);\n\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(46);\n    var SeriesModel = __webpack_require__(47);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(0);\n    var SymbolDraw = __webpack_require__(183);\n    var Symbol = __webpack_require__(63);\n    var lineAnimationDiff = __webpack_require__(188);\n    var graphic = __webpack_require__(2);\n    var modelUtil = __webpack_require__(4);\n    var polyHelper = __webpack_require__(189);\n    var ChartView = __webpack_require__(81);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(7);\n    var vec2 = __webpack_require__(6);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(73);\n\n    __webpack_require__(191);\n\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(2);\n    var AxisBuilder = __webpack_require__(64);\n    var AxisView = __webpack_require__(65);\n    var cartesianAxisHelper = __webpack_require__(66);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(3);\n    var axisPointerModelHelper = __webpack_require__(28);\n    var axisTrigger = __webpack_require__(197);\n    var zrUtil = __webpack_require__(0);\n\n    __webpack_require__(193);\n    __webpack_require__(194);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(196);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(3);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(68);\n\n    var AxisPonterView = __webpack_require__(3).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(11);\n    var graphic = __webpack_require__(2);\n    var get = __webpack_require__(4).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(28);\n    var eventTool = __webpack_require__(22);\n    var throttle = __webpack_require__(80);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(2);\n    var BaseAxisPointer = __webpack_require__(195);\n    var viewHelper = __webpack_require__(69);\n    var cartesianAxisHelper = __webpack_require__(66);\n    var AxisView = __webpack_require__(65);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(4);\n    var modelHelper = __webpack_require__(28);\n    var findPointFromSeries = __webpack_require__(67);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(192);\n\n    __webpack_require__(200);\n\n    __webpack_require__(201);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(3).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(3).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var zrColor = __webpack_require__(24);\n    var eventUtil = __webpack_require__(22);\n    var formatUtil = __webpack_require__(10);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(8);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(3).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(199);\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(10);\n    var numberUtil = __webpack_require__(5);\n    var graphic = __webpack_require__(2);\n    var findPointFromSeries = __webpack_require__(67);\n    var layoutUtil = __webpack_require__(21);\n    var env = __webpack_require__(8);\n    var Model = __webpack_require__(9);\n    var globalListener = __webpack_require__(68);\n    var axisHelper = __webpack_require__(15);\n    var axisPointerViewHelper = __webpack_require__(69);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(3).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(202);\n    var zrUtil = __webpack_require__(0);\n    var ComponentModel = __webpack_require__(14);\n    var layout = __webpack_require__(21);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Axis = __webpack_require__(71);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(0);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Cartesian = __webpack_require__(205);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(73);\n\n    var ComponentModel = __webpack_require__(14);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(46);\n    var symbolUtil = __webpack_require__(79);\n    var axisHelper = __webpack_require__(15);\n    var axisModelCommonMixin = __webpack_require__(72);\n    var Model = __webpack_require__(9);\n    var util = __webpack_require__(0);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(76),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(5);\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(2);\n    var zrUtil = __webpack_require__(0);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(4);\n    var Model = __webpack_require__(9);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(14);\n\n    var globalDefault = __webpack_require__(215);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(77));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(4);\n    var ComponentModel = __webpack_require__(14);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(29)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(29)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(29)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(18);\n    var graphicUtil = __webpack_require__(2);\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(0);\n    var compatStyle = __webpack_require__(222);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(30);\n    var numberUtil = __webpack_require__(5);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(48);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(30);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(5);\n    var formatUtil = __webpack_require__(10);\n    var scaleHelper = __webpack_require__(78);\n\n    var IntervalScale = __webpack_require__(48);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(39);\n    var componentUtil = __webpack_require__(49);\n    var clazzUtil = __webpack_require__(11);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(55);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 230 */,\n/* 231 */,\n/* 232 */,\n/* 233 */,\n/* 234 */,\n/* 235 */,\n/* 236 */,\n/* 237 */,\n/* 238 */,\n/* 239 */,\n/* 240 */,\n/* 241 */,\n/* 242 */,\n/* 243 */,\n/* 244 */,\n/* 245 */,\n/* 246 */,\n/* 247 */,\n/* 248 */,\n/* 249 */,\n/* 250 */,\n/* 251 */,\n/* 252 */,\n/* 253 */,\n/* 254 */,\n/* 255 */,\n/* 256 */,\n/* 257 */,\n/* 258 */,\n/* 259 */,\n/* 260 */,\n/* 261 */,\n/* 262 */,\n/* 263 */,\n/* 264 */,\n/* 265 */,\n/* 266 */,\n/* 267 */,\n/* 268 */,\n/* 269 */,\n/* 270 */,\n/* 271 */,\n/* 272 */,\n/* 273 */,\n/* 274 */,\n/* 275 */,\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */,\n/* 286 */,\n/* 287 */,\n/* 288 */,\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */,\n/* 295 */,\n/* 296 */,\n/* 297 */,\n/* 298 */,\n/* 299 */,\n/* 300 */,\n/* 301 */,\n/* 302 */,\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */,\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */,\n/* 324 */,\n/* 325 */,\n/* 326 */,\n/* 327 */,\n/* 328 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-router v2.5.3\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (false) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (false) {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"production\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.slice().forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) { return String(a[key]) === String(b[key]); })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this.$root._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this.$root._route }\n  });\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    if (Array.isArray(route.alias)) {\n      route.alias.forEach(function (alias) {\n        var aliasRoute = {\n          path: alias,\n          children: route.children\n        };\n        addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path);\n      });\n    } else {\n      var aliasRoute = {\n        path: route.alias,\n        children: route.children\n      };\n      addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path);\n    }\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path) {\n  var regex = index(path);\n  if (false) {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (false) {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (false) {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        position = getElementPosition(el);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left,\n    y: elRect.top - docRect.top\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"production\" !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (called) { return }\n    called = true;\n    return fn.apply(this, arguments)\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, this$1.current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var i = window.location.href.indexOf('#');\n  window.location.replace(\n    window.location.href.slice(0, i >= 0 ? i : 0) + '#' + path\n  );\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.5.3';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (VueRouter);\n\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(0);\n    var Draggable = __webpack_require__(364);\n\n    var Eventful = __webpack_require__(23);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(0);\n    var config = __webpack_require__(38);\n    var Style = __webpack_require__(105);\n    var Pattern = __webpack_require__(104);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(38);\n    var util = __webpack_require__(0);\n    var log = __webpack_require__(102);\n    var BoundingRect = __webpack_require__(12);\n    var timsort = __webpack_require__(53);\n\n    var Layer = __webpack_require__(331);\n\n    var requestAnimationFrame = __webpack_require__(98);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(103);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(0);\n    var env = __webpack_require__(8);\n\n    var Group = __webpack_require__(39);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(53);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(0);\n    var Dispatcher = __webpack_require__(22).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(98);\n\n    var Animator = __webpack_require__(97);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(336);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(99).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(19);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(40).CMD;\n    var line = __webpack_require__(339);\n    var cubic = __webpack_require__(338);\n    var quadratic = __webpack_require__(341);\n    var arc = __webpack_require__(337);\n    var normalizeRadian = __webpack_require__(99).normalizeRadian;\n    var curve = __webpack_require__(19);\n\n    var windingLine = __webpack_require__(342);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(19);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(22);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(6);\n    var curve = __webpack_require__(19);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(22);\n    var zrUtil = __webpack_require__(0);\n    var Eventful = __webpack_require__(23);\n    var env = __webpack_require__(8);\n    var GestureMgr = __webpack_require__(343);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(7);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Gradient = __webpack_require__(55);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Gradient = __webpack_require__(55);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(54);\n    var zrUtil = __webpack_require__(0);\n    var textContain = __webpack_require__(18);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(6);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(6);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(18);\n    var BoundingRect = __webpack_require__(12);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n            rect = style.textPositionRect || rect;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 354 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(19);\n    var vec2 = __webpack_require__(6);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(106);\n\n    module.exports = __webpack_require__(7).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(106);\n\n    module.exports = __webpack_require__(7).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(350);\n\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 361 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 362 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(8);\n    var Path = __webpack_require__(7);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(97);\n    var util = __webpack_require__(0);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(102);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(7);\n    var PathProxy = __webpack_require__(40);\n    var transformPath = __webpack_require__(366);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(40).CMD;\n    var vec2 = __webpack_require__(6);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(101);\n    var env = __webpack_require__(8);\n    var zrUtil = __webpack_require__(0);\n\n    var Handler = __webpack_require__(330);\n    var Storage = __webpack_require__(333);\n    var Animation = __webpack_require__(334);\n    var HandlerProxy = __webpack_require__(345);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(332)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(329)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.cfd6aeee31e004154ad1.js","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/util.js\n// module id = 0\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@12.2.1@vue-loader/lib/component-normalizer.js\n// module id = 1\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    graphic.getFont = function (opt, ecModel) {\n        var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/graphic.js\n// module id = 2\n// module chunks = 0","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.6.2',\n        dependencies: {\n            zrender: '3.5.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/echarts.js\n// module id = 3\n// module chunks = 0","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/model.js\n// module id = 4\n// module chunks = 0","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/number.js\n// module id = 5\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/vector.js\n// module id = 6\n// module chunks = 0","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Path.js\n// module id = 7\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/env.js\n// module id = 8\n// module chunks = 0","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Model.js\n// module id = 9\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/format.js\n// module id = 10\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/clazz.js\n// module id = 11\n// module chunks = 0","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/BoundingRect.js\n// module id = 12\n// module chunks = 0","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Component.js\n// module id = 14\n// module chunks = 0","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: scale.type === 'interval' ? model.get('minInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisHelper.js\n// module id = 15\n// module chunks = 0","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/text.js\n// module id = 18\n// module chunks = 0","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/curve.js\n// module id = 19\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/matrix.js\n// module id = 20\n// module chunks = 0","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/layout.js\n// module id = 21\n// module chunks = 0","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/event.js\n// module id = 22\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Eventful.js\n// module id = 23\n// module chunks = 0","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/color.js\n// module id = 24\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/core-js/json/stringify.js\n// module id = 25\n// module chunks = 0","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_core.js\n// module id = 26\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_descriptors.js\n// module id = 27\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/modelHelper.js\n// module id = 28\n// module chunks = 0","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 29\n// module chunks = 0","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Scale.js\n// module id = 30\n// module chunks = 0","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/config.js\n// module id = 38\n// module chunks = 0","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/container/Group.js\n// module id = 39\n// module chunks = 0","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/PathProxy.js\n// module id = 40\n// module chunks = 0","/*!\n * Vue.js v2.3.4\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    } )); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // remove reference to DOM nodes (prevents leak)\n    vm.$options._parentElm = vm.$options._refElm = null;\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdateHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdateHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = {\n  key: 1,\n  ref: 1,\n  slot: 1\n};\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key] || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production') {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var result = Object.create(null);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (isUndef(Ctor.cid)) {\n    Ctor = resolveAsyncComponent(Ctor, baseCtor, context);\n    if (Ctor === undefined) {\n      // return nothing if this is indeed an async component\n      // wait for the callback to trigger parent update.\n      return\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return this\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.3.4';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (isUndef(value)) {\n    return ''\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  var res = '';\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (isDef(value[i])) {\n        if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.tag === b.tag &&\n    a.isComment === b.isComment &&\n    isDef(a.data) === isDef(b.data) &&\n    sameInputType(a, b)\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        if (ref.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n              typeof console !== 'undefined' &&\n              !bailed\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((isDef(modifiers) && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (process.env.NODE_ENV !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, warn$3)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, warn$3)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}}\"\n}\n\nfunction genForScopedSlot (key, el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el)) +\n    '})'\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (process.env.NODE_ENV !== 'production') {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue@2.3.4@vue/dist/vue.esm.js\n// module id = 41\n// module chunks = 0","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_fails.js\n// module id = 42\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_global.js\n// module id = 43\n// module chunks = 0","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_is-object.js\n// module id = 44\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/CoordinateSystem.js\n// module id = 45\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/createListFromArray.js\n// module id = 46\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Series.js\n// module id = 47\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         */\n        niceTicks: function (splitNumber, minInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval=false]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Interval.js\n// module id = 48\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/component.js\n// module id = 49\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 52\n// module chunks = 0","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/timsort.js\n// module id = 53\n// module chunks = 0","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Displayable.js\n// module id = 54\n// module chunks = 0","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Gradient.js\n// module id = 55\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_defined.js\n// module id = 57\n// module chunks = 0","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_export.js\n// module id = 58\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_iobject.js\n// module id = 59\n// module chunks = 0","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-dp.js\n// module id = 60\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-integer.js\n// module id = 61\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-iobject.js\n// module id = 62\n// module chunks = 0","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var labelHelper = require('./labelHelper');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, elStyle, seriesModel, labelModel, color\n        );\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, hoverItemStyle, seriesModel, hoverLabelModel, color\n        );\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/Symbol.js\n// module id = 63\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/AxisBuilder.js\n// module id = 64\n// module chunks = 0","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/AxisView.js\n// module id = 65\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 66\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 67\n// module chunks = 0","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/globalListener.js\n// module id = 68\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/viewHelper.js\n// module id = 69\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/gridSimple.js\n// module id = 70\n// module chunks = 0","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getModel('textStyle').getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/Axis.js\n// module id = 71\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisModelCommonMixin.js\n// module id = 72\n// module chunks = 0","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/AxisModel.js\n// module id = 73\n// module chunks = 0","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (\n                        axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis)\n                    )) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Grid.js\n// module id = 74\n// module chunks = 0","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/data/List.js\n// module id = 75\n// module chunks = 0","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/data/helper/completeDimensions.js\n// module id = 76\n// module chunks = 0","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/colorPalette.js\n// module id = 77\n// module chunks = 0","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/helper.js\n// module id = 78\n// module chunks = 0","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/symbol.js\n// module id = 79\n// module chunks = 0","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/throttle.js\n// module id = 80\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/view/Chart.js\n// module id = 81\n// module chunks = 0","/**\n * vuex v2.3.0\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;\n    Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: {} };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  var this$1 = this;\n\n  // register root module (Vuex.Store options)\n  this.root = new Module(rawRootModule, false);\n\n  // register all nested modules\n  if (rawRootModule.modules) {\n    forEachValue(rawRootModule.modules, function (rawModule, key) {\n      this$1.register([key], rawModule, false);\n    });\n  }\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update(this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  var parent = this.get(path.slice(0, -1));\n  var newModule = new Module(rawModule, runtime);\n  parent.addChild(path[path.length - 1], newModule);\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (targetModule, newModule) {\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        console.warn(\n          \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n          'manual reload is needed'\n        );\n        return\n      }\n      update(targetModule.getChild(key), newModule.modules[key]);\n    }\n  }\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n  assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.concat(devtoolPlugin).forEach(function (plugin) { return plugin(this$1); });\n};\n\nvar prototypeAccessors = { state: {} };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  assert(false, \"Use store.replaceState() to explicit replace store state.\");\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown mutation type: \" + type));\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (options && options.silent) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var entry = this._actions[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown action type: \" + type));\n    return\n  }\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  var subs = this._subscribers;\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule) {\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path));\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var namespacedType = namespace + key;\n    registerAction(store, namespacedType, action, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler(local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler({\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    console.error((\"[vuex] duplicate getter key: \" + type));\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue) {\n    console.error(\n      '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n    );\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\n// auto install in dist mode\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapMutations', namespace)) {\n        return\n      }\n      return this.$store.commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (!(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapActions', namespace)) {\n        return\n      }\n      return this.$store.dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (!module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '2.3.0',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions\n};\n\nexport { Store, mapState, mapMutations, mapGetters, mapActions };export default index_esm;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vuex@2.3.1@vuex/dist/vuex.esm.js\n// module id = 95\n// module chunks = 0","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Element.js\n// module id = 96\n// module chunks = 0","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Animator.js\n// module id = 97\n// module chunks = 0","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/requestAnimationFrame.js\n// module id = 98\n// module chunks = 0","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/util.js\n// module id = 99\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/LRU.js\n// module id = 100\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/guid.js\n// module id = 101\n// module chunks = 0","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/log.js\n// module id = 102\n// module chunks = 0","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Image.js\n// module id = 103\n// module chunks = 0","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Pattern.js\n// module id = 104\n// module chunks = 0","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textPositionRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Style.js\n// module id = 105\n// module chunks = 0","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/poly.js\n// module id = 106\n// module chunks = 0","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Transformable.js\n// module id = 107\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/assign.js\n// module id = 144\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/define-property.js\n// module id = 145\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/helpers/defineProperty.js\n// module id = 146\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/helpers/extends.js\n// module id = 147\n// module chunks = 0","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/fn/json/stringify.js\n// module id = 148\n// module chunks = 0","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/fn/object/assign.js\n// module id = 149\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/fn/object/define-property.js\n// module id = 150\n// module chunks = 0","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_a-function.js\n// module id = 151\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_an-object.js\n// module id = 152\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_array-includes.js\n// module id = 153\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_cof.js\n// module id = 154\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_ctx.js\n// module id = 155\n// module chunks = 0","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_dom-create.js\n// module id = 156\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_enum-bug-keys.js\n// module id = 157\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_has.js\n// module id = 158\n// module chunks = 0","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_hide.js\n// module id = 159\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_ie8-dom-define.js\n// module id = 160\n// module chunks = 0","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-assign.js\n// module id = 161\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-gops.js\n// module id = 162\n// module chunks = 0","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-keys-internal.js\n// module id = 163\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-keys.js\n// module id = 164\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-pie.js\n// module id = 165\n// module chunks = 0","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_property-desc.js\n// module id = 166\n// module chunks = 0","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_shared-key.js\n// module id = 167\n// module chunks = 0","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_shared.js\n// module id = 168\n// module chunks = 0","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-index.js\n// module id = 169\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-length.js\n// module id = 170\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-object.js\n// module id = 171\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-primitive.js\n// module id = 172\n// module chunks = 0","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_uid.js\n// module id = 173\n// module chunks = 0","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/es6.object.assign.js\n// module id = 174\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/es6.object.define-property.js\n// module id = 175\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/ExtensionAPI.js\n// module id = 176\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar.js\n// module id = 177\n// module chunks = 0","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/BarSeries.js\n// module id = 178\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/BarView.js\n// module id = 179\n// module chunks = 0","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 180\n// module chunks = 0","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/barItemStyle.js\n// module id = 181\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/helper.js\n// module id = 182\n// module chunks = 0","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/SymbolDraw.js\n// module id = 183\n// module chunks = 0","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    helper.setTextToStyle = function (\n        data, dataIndex, valueDim, elStyle, seriesModel, labelModel, color\n    ) {\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                data.get(valueDim, dataIndex)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/labelHelper.js\n// module id = 184\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line.js\n// module id = 185\n// module chunks = 0","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/LineSeries.js\n// module id = 186\n// module chunks = 0","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/LineView.js\n// module id = 187\n// module chunks = 0","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 188\n// module chunks = 0","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/poly.js\n// module id = 189\n// module chunks = 0","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis.js\n// module id = 190\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/CartesianAxisView.js\n// module id = 191\n// module chunks = 0","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer.js\n// module id = 192\n// module chunks = 0","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 193\n// module chunks = 0","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 194\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 195\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 196\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 197\n// module chunks = 0","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip.js\n// module id = 198\n// module chunks = 0","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipContent.js\n// module id = 199\n// module chunks = 0","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipModel.js\n// module id = 200\n// module chunks = 0","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipView.js\n// module id = 201\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisDefault.js\n// module id = 202\n// module chunks = 0","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisModelCreator.js\n// module id = 203\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Axis2D.js\n// module id = 204\n// module chunks = 0","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian.js\n// module id = 205\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 206\n// module chunks = 0","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/GridModel.js\n// module id = 207\n// module chunks = 0","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/data/DataDiffer.js\n// module id = 208\n// module chunks = 0","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/helper.js\n// module id = 209\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/layout/barGrid.js\n// module id = 210\n// module chunks = 0","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/layout/points.js\n// module id = 211\n// module chunks = 0","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/loading/default.js\n// module id = 212\n// module chunks = 0","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Global.js\n// module id = 213\n// module chunks = 0","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/OptionManager.js\n// module id = 214\n// module chunks = 0","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/globalDefault.js\n// module id = 215\n// module chunks = 0","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/areaStyle.js\n// module id = 216\n// module chunks = 0","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/boxLayout.js\n// module id = 217\n// module chunks = 0","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/itemStyle.js\n// module id = 218\n// module chunks = 0","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/lineStyle.js\n// module id = 219\n// module chunks = 0","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/textStyle.js\n// module id = 220\n// module chunks = 0","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/preprocessor/backwardCompat.js\n// module id = 221\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 222\n// module chunks = 0","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/processor/dataSample.js\n// module id = 223\n// module chunks = 0","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Log.js\n// module id = 224\n// module chunks = 0","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Ordinal.js\n// module id = 225\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Time.js\n// module id = 226\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/view/Component.js\n// module id = 227\n// module chunks = 0","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/visual/seriesColor.js\n// module id = 228\n// module chunks = 0","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/visual/symbol.js\n// module id = 229\n// module chunks = 0","/**\n  * vue-router v2.5.3\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.slice().forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) { return String(a[key]) === String(b[key]); })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this.$root._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this.$root._route }\n  });\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    if (Array.isArray(route.alias)) {\n      route.alias.forEach(function (alias) {\n        var aliasRoute = {\n          path: alias,\n          children: route.children\n        };\n        addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path);\n      });\n    } else {\n      var aliasRoute = {\n        path: route.alias,\n        children: route.children\n      };\n      addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path);\n    }\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path) {\n  var regex = index(path);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        position = getElementPosition(el);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left,\n    y: elRect.top - docRect.top\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (called) { return }\n    called = true;\n    return fn.apply(this, arguments)\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, this$1.current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var i = window.location.href.indexOf('#');\n  window.location.replace(\n    window.location.href.slice(0, i >= 0 ? i : 0) + '#' + path\n  );\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.5.3';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-router@2.5.3@vue-router/dist/vue-router.esm.js\n// module id = 328\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-style-loader@3.0.1@vue-style-loader/lib/listToStyles.js\n// module id = 329\n// module chunks = 0","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Handler.js\n// module id = 330\n// module chunks = 0","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Layer.js\n// module id = 331\n// module chunks = 0","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Painter.js\n// module id = 332\n// module chunks = 0","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Storage.js\n// module id = 333\n// module chunks = 0","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Animation.js\n// module id = 334\n// module chunks = 0","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Clip.js\n// module id = 335\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/easing.js\n// module id = 336\n// module chunks = 0","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/arc.js\n// module id = 337\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/cubic.js\n// module id = 338\n// module chunks = 0","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/line.js\n// module id = 339\n// module chunks = 0","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/path.js\n// module id = 340\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/quadratic.js\n// module id = 341\n// module chunks = 0","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/windingLine.js\n// module id = 342\n// module chunks = 0","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/GestureMgr.js\n// module id = 343\n// module chunks = 0","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/bbox.js\n// module id = 344\n// module chunks = 0","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/dom/HandlerProxy.js\n// module id = 345\n// module chunks = 0","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/CompoundPath.js\n// module id = 346\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/LinearGradient.js\n// module id = 347\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/RadialGradient.js\n// module id = 348\n// module chunks = 0","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Text.js\n// module id = 349\n// module chunks = 0","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/roundRect.js\n// module id = 350\n// module chunks = 0","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothBezier.js\n// module id = 351\n// module chunks = 0","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothSpline.js\n// module id = 352\n// module chunks = 0","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n            rect = style.textPositionRect || rect;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/mixin/RectText.js\n// module id = 353\n// module chunks = 0","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Arc.js\n// module id = 354\n// module chunks = 0","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/BezierCurve.js\n// module id = 355\n// module chunks = 0","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Circle.js\n// module id = 356\n// module chunks = 0","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Line.js\n// module id = 357\n// module chunks = 0","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polygon.js\n// module id = 358\n// module chunks = 0","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polyline.js\n// module id = 359\n// module chunks = 0","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Rect.js\n// module id = 360\n// module chunks = 0","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Ring.js\n// module id = 361\n// module chunks = 0","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Sector.js\n// module id = 362\n// module chunks = 0","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Animatable.js\n// module id = 363\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Draggable.js\n// module id = 364\n// module chunks = 0","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/path.js\n// module id = 365\n// module chunks = 0","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/transformPath.js\n// module id = 366\n// module chunks = 0","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/zrender.js\n// module id = 367\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_css-loader@0.28.4@css-loader/lib/css-base.js\n// module id = 368\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-style-loader@3.0.1@vue-style-loader/lib/addStylesClient.js\n// module id = 369\n// module chunks = 0"],"sourceRoot":""}